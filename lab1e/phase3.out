
=================== Simulator Command Section =====================

Memory Dump Trace: 6


=================== Micro Memory Section =====================

    :   c  i a     s            c    b    a          : 
    :   o  n m  a  h mm    e    c    b    a          : 
  l :   n  t u  l  f ba rw n    c    b    a          : 
  c :   d  r x  u  t rr dr c    c    b    a    addr4 : 
--- : --- -- - -- -- -- -- - ---- ---- ---- -------- : 

    :   c  i a     s            c    b    a         
    :   o  n m  a  h mm    e    c    b    a         
    :   n  t u  l  f ba rw n    c    b    a         
    :   d  r x  u  t rr dr c    c    b    a    addr4
    : --- -- - -- -- -- -- - ---- ---- ---- --------
  0 : 011 00 0 00 00 00 00 1 0000 0101 0101 00000011 :  pc := (  0+  0); 
    :                                                : JMP    3;
    * 
    : start of loop (read loop)
  3 : 000 00 0 00 00 01 00 0 0000 0000 0000 00000000 : mar :=  pc; 
  4 : 000 00 0 00 00 00 10 0 0000 0000 0000 00000000 : rd; 
  5 : 000 00 0 00 00 00 10 0 0000 0000 0000 00000000 : rd; 
  6 : 000 00 1 00 00 00 00 1 0011 0101 0000 00000000 :  ir := (mbr+  0); 
  7 : 011 00 0 00 00 00 00 1 0000 0110 0000 00001010 :  pc := ( pc+ +1); 
    :                                                : JMP   10;
    : Check Op Codes 
    * 
    : Checks First Two bits. Goes to next line if 00 and branches to line 14 if 01 
 10 : 100  00001011   00001110   00000000   00000000 : JIR[7:6]  11  14   0   0
    : Checks bits 5 and 4 of Mac0. Goes to ADD intruction if 11 and SUB if 10, Goes to 12 if 00  
 11 : 101  00001100   00000000   00110111   00101101 : JIR[5:4]  12   0  55  45
    : Checks if bits 2 and 3 are 00 01 10 11. Goes to 13 if 00, Goes to 15 if 01 . Goes to 70 if 10 (BRR), Goes to 87 if TST  
 12 : 110  00001101   00001111   01000110   01010111 : JIR[3:2]  13  15  70  87
    : Checks bits 0 and 1.   
 13 : 111  11111111   00010010   00010010   00010010 : JIR[1:0] 255  18  18  18
    * 
    : Checks bits 5 and 4 if bits 7 and 6 are 0 1 respectively. Branches to 28 if 01 (CLR), to 31 if NEG, 40 if INC, 
 14 : 101  01001011   00011010   00011111   00101000 : JIR[5:4]  75  26  31  40
    * 
    : Checks the 0 and 1 bit if bits 5 and 4 of the instruction are 01. If bits 0 and 1 are 00, jump to 20 (BR). If 01, then jump to 80. 
 15 : 111  00010100   01010000   01010010   01010100 : JIR[1:0]  20  80  82  84

    * 
    : NOP operation 
 18 : 011 00 0 00 00 00 00 0 0000 0000 0000 00000011 : JMP    3;
    * 
    : Branches (BR) 
 20 : 000 00 0 00 00 01 00 0 0000 0000 0000 00000000 : mar :=  pc; 
 21 : 000 00 0 00 00 00 10 0 0000 0000 0000 00000000 : rd; 
 22 : 000 00 0 00 00 00 10 0 0000 0000 0000 00000000 : rd; 
 23 : 000 00 1 00 00 00 00 1 1000 0101 0000 00000000 :  t1 := (mbr+  0); 
 24 : 011 00 0 00 00 00 00 1 0000 0101 1000 00000011 :  pc := ( t1+  0); 
    :                                                : JMP    3;
    * 
    : Checks what bits 3 and 2 correspond to which register. Goes to 27 if 00, goes to 28 if 01 ..... goes to 30 if 11 (CLR)  
 26 : 110  00011011   00011100   00011101   00011110 : JIR[3:2]  27  28  29  30
 27 : 011 00 0 00 00 00 00 1 1100 0101 0101 00000011 : gr0 := (  0+  0); 
    :                                                : JMP    3;
 28 : 011 00 0 00 00 00 00 1 1101 0101 0101 00000011 : gr1 := (  0+  0); 
    :                                                : JMP    3;
 29 : 011 00 0 00 00 00 00 1 1110 0101 0101 00000011 : gr2 := (  0+  0); 
    :                                                : JMP    3;
 30 : 011 00 0 00 00 00 00 1 1111 0101 0101 00000011 : gr3 := (  0+  0); 
    :                                                : JMP    3;
    * 
    : Checks which general register bits 3 and 2 correspond to. Jumps to corresponding line and does 2s complement operation (NEG)
 31 : 110  00100000   00100010   00100100   00100110 : JIR[3:2]  32  34  36  38
 32 : 000 00 0 11 00 00 00 1 1100 0101 1100 00000000 : gr0 := (gr0 NOT); 
 33 : 011 00 0 00 00 00 00 1 1100 1100 0110 00000011 : gr0 := ( +1+gr0); 
    :                                                : JMP    3;
 34 : 000 00 0 11 00 00 00 1 1101 0101 1101 00000000 : gr1 := (gr1 NOT); 
 35 : 011 00 0 00 00 00 00 1 1101 1101 0110 00000011 : gr1 := ( +1+gr1); 
    :                                                : JMP    3;
 36 : 000 00 0 11 00 00 00 1 1110 0101 1110 00000000 : gr2 := (gr2 NOT); 
 37 : 011 00 0 00 00 00 00 1 1110 1110 0110 00000011 : gr2 := ( +1+gr2); 
    :                                                : JMP    3;
 38 : 000 00 0 11 00 00 00 1 1111 0101 1111 00000000 : gr3 := (gr3 NOT); 
 39 : 011 00 0 00 00 00 00 1 1111 1111 0110 00000011 : gr3 := ( +1+gr3); 
    :                                                : JMP    3;
    * 
    : Checks what general register bits 3 and 2 correspond to. Jumps to corresponding line and increments  (INC)
 40 : 110  00101001   00101010   00101011   00101100 : JIR[3:2]  41  42  43  44
 41 : 011 00 0 00 00 00 00 1 1100 1100 0110 00000011 : gr0 := ( +1+gr0); 
    :                                                : JMP    3;
 42 : 011 00 0 00 00 00 00 1 1101 1101 0110 00000011 : gr1 := ( +1+gr1); 
    :                                                : JMP    3;
 43 : 011 00 0 00 00 00 00 1 1110 1110 0110 00000011 : gr2 := ( +1+gr2); 
    :                                                : JMP    3;
 44 : 011 00 0 00 00 00 00 1 1111 1111 0110 00000011 : gr3 := ( +1+gr3); 
    :                                                : JMP    3;
    * 
    : Checks last two bits for Register 2. Puts content into AC. Next step is on address 50. (ADD)
 45 : 111  00101110   00101111   00110000   00110001 : JIR[1:0]  46  47  48  49
 46 : 011 00 0 00 00 00 00 1 0001 1100 0101 00110010 :  ac := (  0+gr0); 
    :                                                : JMP   50;
 47 : 011 00 0 00 00 00 00 1 0001 1101 0101 00110010 :  ac := (  0+gr1); 
    :                                                : JMP   50;
 48 : 011 00 0 00 00 00 00 1 0001 1110 0101 00110010 :  ac := (  0+gr2); 
    :                                                : JMP   50;
 49 : 011 00 0 00 00 00 00 1 0001 1111 0101 00110010 :  ac := (  0+gr3); 
    :                                                : JMP   50;
    : Adds AC to Register 1 and puts the result in Register 1.
 50 : 110  00110011   00110100   00110101   00110110 : JIR[3:2]  51  52  53  54
 51 : 011 00 0 00 00 00 00 1 1100 1100 0001 00000011 : gr0 := ( ac+gr0); 
    :                                                : JMP    3;
 52 : 011 00 0 00 00 00 00 1 1101 1101 0001 00000011 : gr1 := ( ac+gr1); 
    :                                                : JMP    3;
 53 : 011 00 0 00 00 00 00 1 1110 1110 0001 00000011 : gr2 := ( ac+gr2); 
    :                                                : JMP    3;
 54 : 011 00 0 00 00 00 00 1 1111 1111 0001 00000011 : gr3 := ( ac+gr3); 
    :                                                : JMP    3;
    * 
    : Does 2s complement on Register 2 and stores in AC  (SUB)
 55 : 111  00111000   00111010   00111100   00111110 : JIR[1:0]  56  58  60  62
 56 : 000 00 0 11 00 00 00 1 1000 0101 1100 00000000 :  t1 := (gr0 NOT); 
 57 : 011 00 0 00 00 00 00 1 0001 1000 0110 01000000 :  ac := ( +1+ t1); 
    :                                                : JMP   64;
 58 : 000 00 0 11 00 00 00 1 1000 0101 1101 00000000 :  t1 := (gr1 NOT); 
 59 : 011 00 0 00 00 00 00 1 0001 1000 0110 01000000 :  ac := ( +1+ t1); 
    :                                                : JMP   64;
 60 : 000 00 0 11 00 00 00 1 1000 0101 1110 00000000 :  t1 := (gr2 NOT); 
 61 : 011 00 0 00 00 00 00 1 0001 1000 0110 01000000 :  ac := ( +1+ t1); 
    :                                                : JMP   64;
 62 : 000 00 0 11 00 00 00 1 1000 0101 1111 00000000 :  t1 := (gr3 NOT); 
 63 : 011 00 0 00 00 00 00 1 0001 1000 0110 01000000 :  ac := ( +1+ t1); 
    :                                                : JMP   64;
    : Adds negative value to Register 1 and stores in Register 1
 64 : 110  01000001   01000010   01000011   01000100 : JIR[3:2]  65  66  67  68
 65 : 011 00 0 00 00 00 00 1 1100 1100 0001 00000011 : gr0 := ( ac+gr0); 
    :                                                : JMP    3;
 66 : 011 00 0 00 00 00 00 1 1101 1101 0001 00000011 : gr1 := ( ac+gr1); 
    :                                                : JMP    3;
 67 : 011 00 0 00 00 00 00 1 1110 1110 0001 00000011 : gr2 := ( ac+gr2); 
    :                                                : JMP    3;
 68 : 011 00 0 00 00 00 00 1 1111 1111 0001 00000011 : gr3 := ( ac+gr3); 
    :                                                : JMP    3;
    * 
    : Checks bits 5 and 4 for register 1. Puts register 1 in PC. (BRR)
 70 : 111  01000111   01001000   01001001   01001010 : JIR[1:0]  71  72  73  74
 71 : 011 00 0 00 00 00 00 1 0000 1100 0101 00000011 :  pc := (  0+gr0); 
    :                                                : JMP    3;
 72 : 011 00 0 00 00 00 00 1 0000 1101 0101 00000011 :  pc := (  0+gr1); 
    :                                                : JMP    3;
 73 : 011 00 0 00 00 00 00 1 0000 1110 0101 00000011 :  pc := (  0+gr2); 
    :                                                : JMP    3;
 74 : 011 00 0 00 00 00 00 1 0000 1111 0101 00000011 :  pc := (  0+gr3); 
    :                                                : JMP    3;
    * 
    : Checks bits 5 and 4 for register 1. Stores PC+1 in Register 1 and does a branch instruction (address 20). (JSR) 
 75 : 110  01001100   01001101   01001110   01001111 : JIR[3:2]  76  77  78  79
 76 : 011 00 0 00 00 00 00 1 1100 0000 0110 00010100 : gr0 := ( +1+ pc); 
    :                                                : JMP   20;
 77 : 011 00 0 00 00 00 00 1 1101 0000 0110 00010100 : gr1 := ( +1+ pc); 
    :                                                : JMP   20;
 78 : 011 00 0 00 00 00 00 1 1110 0000 0110 00010100 : gr2 := ( +1+ pc); 
    :                                                : JMP   20;
 79 : 011 00 0 00 00 00 00 1 1111 0000 0110 00010100 : gr3 := ( +1+ pc); 
    :                                                : JMP   20;
    * 
    : Checks if bit 0 of PSW is 0. If 0 then increment PC because PSW is positive. Else do a branch instruction because PSW is negative (BNEG)  
 80 : 010 00 0 01 00 00 00 0 0000 0110 1011 01101010 : JZ (psw& +1)  106;
 81 : 011 00 0 00 00 00 00 0 0000 0000 0000 00010100 : JMP   20;
    * 
    : Checks if bit 0 of PSW is 0. If 0 then do a branch instruction because PSW is positive. Else.. do nothing and fetch another instruction because PC was already incremented 
 82 : 010 00 0 01 00 00 00 0 0000 0110 1011 00010100 : JZ (psw& +1)   20;
 83 : 011 00 0 00 00 00 00 0 0000 0000 0000 01101010 : JMP  106;
    * 
    : Shifts PSW right and stores result in t2. If rightmost bit of t2 is 0, then do nothing because PSW is not 0. Else do a branch instruction (BZ)
 84 : 000 00 0 00 01 00 00 1 1001 1011 0110 00000000 :  t2 := shr( +1+psw); 
 85 : 010 00 0 01 00 00 00 0 0000 1001 0110 01101010 : JZ ( +1& t2)  106;
 86 : 011 00 0 00 00 00 00 0 0000 0000 0000 00010100 : JMP   20;
    * 
    : Clears PSW register first 
    : Checks if zero, negative, or positive. Jumps to instruction that modifies the PSW register afterward.
 87 : 000 00 0 00 00 00 00 1 1011 0101 0101 00000000 : psw := (  0+  0); 
 88 : 111  01011001   01011100   01011111   01100010 : JIR[1:0]  89  92  95  98
    : gr0 (89)
 89 : 010 00 0 00 00 00 00 1 1001 1100 0101 01100110 :  t2 := (  0+gr0); 
    :                                                : JZ (  0+gr0)  102;
 90 : 001 00 0 00 00 00 00 1 1001 1100 0101 01100111 :  t2 := (  0+gr0); 
    :                                                : JN (  0+gr0)  103;
 91 : 011 00 0 00 00 00 00 1 1001 1100 0101 01101000 :  t2 := (  0+gr0); 
    :                                                : JMP  104;
    : gr1 (92)
 92 : 010 00 0 00 00 00 00 1 1001 1101 0101 01100110 :  t2 := (  0+gr1); 
    :                                                : JZ (  0+gr1)  102;
 93 : 001 00 0 00 00 00 00 1 1001 1101 0101 01100111 :  t2 := (  0+gr1); 
    :                                                : JN (  0+gr1)  103;
 94 : 011 00 0 00 00 00 00 1 1001 1101 0101 01101000 :  t2 := (  0+gr1); 
    :                                                : JMP  104;
    : gr2 (95)
 95 : 010 00 0 00 00 00 00 1 1001 1110 0101 01100110 :  t2 := (  0+gr2); 
    :                                                : JZ (  0+gr2)  102;
 96 : 001 00 0 00 00 00 00 1 1001 1110 0101 01100111 :  t2 := (  0+gr2); 
    :                                                : JN (  0+gr2)  103;
 97 : 011 00 0 00 00 00 00 1 1001 1110 0101 01101000 :  t2 := (  0+gr2); 
    :                                                : JMP  104;
    : gr3 (98) 
 98 : 010 00 0 00 00 00 00 1 1001 1111 0101 01100110 :  t2 := (  0+gr3); 
    :                                                : JZ (  0+gr3)  102;
 99 : 001 00 0 00 00 00 00 1 1001 1111 0101 01100111 :  t2 := (  0+gr3); 
    :                                                : JN (  0+gr3)  103;
100 : 011 00 0 00 00 00 00 1 1001 1111 0101 01101000 :  t2 := (  0+gr3); 
    :                                                : JMP  104;
    * 
    : If zero
102 : 011 00 0 00 10 00 00 1 1011 0101 0110 00000011 : psw := shl( +1+  0); 
    :                                                : JMP    3;
    : If negative
103 : 011 00 0 00 00 00 00 1 1011 0110 1011 00000011 : psw := (psw+ +1); 
    :                                                : JMP    3;
    : If positive 
104 : 011 00 0 00 00 00 00 1 1011 0101 0101 00000011 : psw := (  0+  0); 
    :                                                : JMP    3;
    * 
    : Increments PC for op codoes BPOZ BNEG AND BZ
106 : 011 00 0 00 00 00 00 1 0000 0000 0110 00000011 :  pc := ( +1+ pc); 
    :                                                : JMP    3;

=================== Main Memory Section =====================

    : 		CLR r0
    : 		JSR r3, L20
    : 		INC r1
    : 		INC r2
    : 		NEG r2
    : 		TST r0
    : 		BZ  L1
    : 	L2:	TST r1
    : 		BPOZ L3
    : 	L4:	TST r2
    : 		BNEG L5
    : 	L7:	HALT
    : 
    : 	L1:	TST r2
    : 		BPOZ L13
    : 		BR L2
    : 	L3:	TST r1
    : 		BNEG L13
    : 		BR L4
    : 	L5:	TST r1
    : 		BZ L13
    : 		BR L7
    : 	L13:	HALT
    : 
    : 	L20:	CLR r1
    : 		CLR r2
    : 		INC r1
    : 		ADD r0, r1
    : 		CLR r1
    : 		CLR r0
    : 		BRR r3
    : 
  0 : 01010000 : 50=+080 : clr gr0
  1 : 01001100 : 4C=+076 : jsr gr3
  2 : 01000000 : 40=+064 :  <==>               jsr gr0
  3 : 01110100 : 74=+116 : inc gr1
  4 : 01111000 : 78=+120 : inc gr2
  5 : 01101000 : 68=+104 : neg gr2

  6 : 00001100 : 0C=+012 : tst gr0
  7 : 00000111 : 07=+007 : bz
  8 : 00100000 : 20=+032 :  <==>               sub gr0, gr0

  9 : 00001101 : 0D=+013 : tst gr1
 10 : 00000110 : 06=+006 : bpoz
 11 : 00100101 : 25=+037 :  <==>               sub gr1, gr1

 12 : 00001110 : 0E=+014 : tst gr2
 13 : 00000101 : 05=+005 : bneg
 14 : 00101010 : 2A=+042 :  <==>               sub gr2, gr2

 15 : 00000000 : 00=+000 : hlt

    * 
 32 : 00001110 : 0E=+014 : tst gr2
 33 : 00000110 : 06=+006 : bpoz
 34 : 00101111 : 2F=+047 :  <==>               sub gr3, gr3
 35 : 00000100 : 04=+004 : br
 36 : 00001001 : 09=+009 :  <==>               brr gr1

 37 : 00001101 : 0D=+013 : tst gr1
 38 : 00000101 : 05=+005 : bneg
 39 : 00101111 : 2F=+047 :  <==>               sub gr3, gr3
 40 : 00000100 : 04=+004 : br
 41 : 00001100 : 0C=+012 :  <==>               tst gr0

 42 : 00001101 : 0D=+013 : tst gr1
 43 : 00000111 : 07=+007 : bz
 44 : 00101111 : 2F=+047 :  <==>               sub gr3, gr3
 45 : 00000100 : 04=+004 : br
 46 : 00001111 : 0F=+015 :  <==>               tst gr3

    * 
 47 : 00000000 : 00=+000 : hlt
    * 
 64 : 01010100 : 54=+084 : clr gr1
 65 : 01011010 : 5A=+090 : clr gr2
 66 : 01110100 : 74=+116 : inc gr1
 67 : 00110001 : 31=+049 : add gr0, gr1
 68 : 01010100 : 54=+084 : clr gr1
 69 : 01010000 : 50=+080 : clr gr0
 70 : 00001011 : 0B=+011 : brr gr3

=================== Input Specification Section =====================




=================== Tracing Output Section =====================

            :  pc:00=+000; psw:???????;  ir:50=+080; clr gr0
            : gr0:???????; gr1:???????; gr2:???????; gr3:???????; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:01=+001; psw:???????;  ir:4C=+076; jsr gr3
            : gr0:00=+000; gr1:???????; gr2:???????; gr3:???????; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:40=+064; psw:???????;  ir:54=+084; clr gr1
            : gr0:00=+000; gr1:???????; gr2:???????; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:41=+065; psw:???????;  ir:5A=+090; clr gr2
            : gr0:00=+000; gr1:00=+000; gr2:???????; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:42=+066; psw:???????;  ir:74=+116; inc gr1
            : gr0:00=+000; gr1:00=+000; gr2:00=+000; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:43=+067; psw:???????;  ir:31=+049; add gr0, gr1
            : gr0:00=+000; gr1:01=+001; gr2:00=+000; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:44=+068; psw:???????;  ir:54=+084; clr gr1
            : gr0:01=+001; gr1:01=+001; gr2:00=+000; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:45=+069; psw:???????;  ir:50=+080; clr gr0
            : gr0:01=+001; gr1:00=+000; gr2:00=+000; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:46=+070; psw:???????;  ir:0B=+011; brr gr3
            : gr0:00=+000; gr1:00=+000; gr2:00=+000; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:03=+003; psw:???????;  ir:74=+116; inc gr1
            : gr0:00=+000; gr1:00=+000; gr2:00=+000; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:04=+004; psw:???????;  ir:78=+120; inc gr2
            : gr0:00=+000; gr1:01=+001; gr2:00=+000; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:05=+005; psw:???????;  ir:68=+104; neg gr2
            : gr0:00=+000; gr1:01=+001; gr2:01=+001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:06=+006; psw:???????;  ir:0C=+012; tst gr0
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:07=+007; psw:02=+002;  ir:07=+007; bz
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:20=+032; psw:02=+002;  ir:0E=+014; tst gr2
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:21=+033; psw:01=+001;  ir:06=+006; bpoz
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:23=+035; psw:01=+001;  ir:04=+004; br
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:09=+009; psw:01=+001;  ir:0D=+013; tst gr1
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:0A=+010; psw:00=+000;  ir:06=+006; bpoz
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:25=+037; psw:00=+000;  ir:0D=+013; tst gr1
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:26=+038; psw:00=+000;  ir:05=+005; bneg
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:28=+040; psw:00=+000;  ir:04=+004; br
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:0C=+012; psw:00=+000;  ir:0E=+014; tst gr2
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:0D=+013; psw:01=+001;  ir:05=+005; bneg
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:2A=+042; psw:01=+001;  ir:0D=+013; tst gr1
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:2B=+043; psw:00=+000;  ir:07=+007; bz
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:2D=+045; psw:00=+000;  ir:04=+004; br
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????

            :  pc:0F=+015; psw:00=+000;  ir:00=+000; hlt
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????




Execution terminated normally at microword 255.


mpc : cycle : 
255 :   331 : JIR[1:0] 255  18  18  18
            : alt:0F=+015; blt:01=+001; amx:0F=+015; alu:10=+016; sft:10=+016; 
            :  pc:10=+016;  ac:01=+001;  sp:???????;  ir:00=+000; tir:???????; 
            :  t1:0F=+015;  t2:00=+000;  t3:???????; psw:00=+000; 
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : mar:0F=+015; mbr:00=+000
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 

            :  pc:10=+016; psw:00=+000;  ir:00=+000; hlt
            : gr0:00=+000; gr1:01=+001; gr2:FF=-001; gr3:03=+003; 
            : rcs:10000000 rbf:00=+000; xcs:10000000 xbf:00=+000; int: 000; 
     Mem[0] :  50=+080 4C=+076 40=+064 74=+116 78=+120 68=+104 0C=+012 07=+007
     Mem[8] :  20=+032 0D=+013 06=+006 25=+037 0E=+014 05=+005 2A=+042 00=+000
    Mem[32] :  0E=+014 06=+006 2F=+047 04=+004 09=+009 0D=+013 05=+005 2F=+047
    Mem[40] :  04=+004 0C=+012 0D=+013 07=+007 2F=+047 04=+004 0F=+015 00=+000
    Mem[64] :  54=+084 5A=+090 74=+116 31=+049 54=+084 50=+080 0B=+011 ???????



